I need to determine the correct MCP protocol sequence for the QuickBooks SSE server at `https://officeadmin.io/mcp/qb/sse`. The server rejects notifications, indicating an initialization problem. I will use `curl` to probe the server, first by inspecting the SSE endpoint, then attempting various `initialize` message formats, and sending test notifications. I will analyze server responses to deduce the expected protocol, consulting any available MCP documentation if necessary, and will report the exact working command sequence.The initial `curl` revealed a `sessionId` and the message endpoint, `/mcp/qb/messages`. Now I'll POST a simple `{"type": "initialize"}` JSON payload to that endpoint, using the `sessionId` `3b8b1a2f-acb9-4286-be56-85e7172b43a1` to see if it works.The server returned a `406 Not Acceptable` with a JSON-RPC error, requiring my client to accept both `application/json` and `text/event-stream`. I'll add the `Accept: application/json, text/event-stream` header to my `curl` command and retry the request.Progress! I've shifted from a `406` to a `400` error, and the Zod validation errors are clear: I need to use JSON-RPC 2.0. My `initialize` message requires `"jsonrpc": "2.0"`, a string or number `"id"`, and `"method": "initialize"` instead of `"type"`. I'll construct a new payload with these corrections, including an empty `"params"` object, get a fresh `sessionId`, and retry the request.Okay, new `sessionId` is `8988dd5c-4885-4952-bf04-069644274c04`. I'm sending the corrected JSON-RPC 2.0 `initialize` request with it now.Still getting a "Server not initialized" error despite a valid JSON-RPC request. The `initialize` method likely requires specific `params`. I'll try adding a `client_name` parameter, a reasonable guess, to the request. First, I need a new `sessionId`.New `sessionId`: `9b8c2edf-d554-492d-ae4d-7bcebaa5f49a`. Now, initializing with `client_name`: "Gemini CLI".This protocol is tricky. The "Server not initialized" error on `initialize` suggests a pre-`initialize` message is needed. I'll try acknowledging the initial SSE `endpoint` event before sending `initialize` on the same connection. Using
